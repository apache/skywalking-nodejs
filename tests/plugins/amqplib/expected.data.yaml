#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

segmentItems:
  - serviceName: server
    segmentSize: 1
    segments:
      - segmentId: not null
        spans:
          - operationName: RabbitMQ//queue/Producer
            operationId: 0
            parentSpanId: 0
            spanId: 1
            spanLayer: MQ
            tags:
              - { key: mq.broker, value: amqp://192.168.16.3:5672 }
              - { key: mq.queue, value: queue }
            startTime: gt 0
            endTime: gt 0
            componentId: 52
            spanType: Exit
            peer: 192.168.16.3:5672
            skipAnalysis: false
          - operationName: /producer
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            tags:
              - { key: http.url, value: 'http://localhost:5000/producer' }
              - { key: http.method, value: GET }
              - { key: http.status.code, value: '200' }
              - { key: http.status.msg, value: OK }
            startTime: gt 0
            endTime: gt 0
            componentId: 49
            spanType: Entry
            peer: not null
            skipAnalysis: false
  - serviceName: client
    segmentSize: 1
    segments:
      - segmentId: not null
        spans:
          - operationName: RabbitMQ//queue/Consumer
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: MQ
            tags:
              - { key: mq.broker, value: 'amqp://192.168.16.3:5672' }
              - { key: mq.queue, value: queue }
              - { key: http.status.code, value: '200' }  # this is RabbitMQ Entry span inheriting HTTP server Entry span, should not happen, need to fix
              - { key: http.status.msg, value: OK }
            startTime: gt 0
            endTime: gt 0
            componentId: 53
            spanType: Entry
            peer: not null
            skipAnalysis: false
